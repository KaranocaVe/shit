#!/bin/sh
#
# This test measures the performance of various read-tree
# and status operations.  It is primarily interested in
# the algorithmic costs of index operations and recursive
# tree traversal -- and NOT disk I/O on thousands of files.

test_description="Tests performance of read-tree"

. ./perf-lib.sh

test_perf_default_repo

# If the test repo was generated by ./repos/many-files.sh
# then we know something about the data shape and branches,
# so we can isolate testing to the ballast-related commits
# and setup sparse-checkout so we don't have to populate
# the ballast files and directories.
#
# Otherwise, we make some general assumptions about the
# repo and consider the entire history of the current
# branch to be the ballast.

test_expect_success "setup repo" '
	if shit rev-parse --verify refs/heads/p0006-ballast^{commit}
	then
		echo Assuming synthetic repo from many-files.sh &&
		shit branch br_base            master &&
		shit branch br_ballast         p0006-ballast &&
		shit config --local core.sparsecheckout 1 &&
		cat >.shit/info/sparse-checkout <<-EOF
		/*
		!ballast/*
		EOF
	else
		echo Assuming non-synthetic repo... &&
		shit branch br_base            $(shit rev-list HEAD | tail -n 1) &&
		shit branch br_ballast         HEAD
	fi &&
	shit checkout -q br_ballast &&
	nr_files=$(shit ls-files | wc -l)
'

test_perf "read-tree status br_ballast ($nr_files)" '
	shit read-tree HEAD &&
	shit status
'

test_done
