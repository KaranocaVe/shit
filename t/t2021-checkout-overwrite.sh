#!/bin/sh

test_description='checkout must not overwrite an untracked objects'

TEST_PASSES_SANITIZE_LEAK=true
. ./test-lib.sh

test_expect_success 'setup' '

	mkdir -p a/b/c &&
	>a/b/c/d &&
	shit add -A &&
	shit commit -m base &&
	shit tag start
'

test_expect_success 'create a commit where dir a/b changed to file' '

	shit checkout -b file &&
	rm -rf a/b &&
	>a/b &&
	shit add -A &&
	shit commit -m "dir to file"
'

test_expect_success 'checkout commit with dir must not remove untracked a/b' '

	shit rm --cached a/b &&
	shit commit -m "un-track the file" &&
	test_must_fail shit checkout start &&
	test -f a/b
'

test_expect_success 'create a commit where dir a/b changed to symlink' '

	rm -rf a/b &&	# cleanup if previous test failed
	shit checkout -f -b symlink start &&
	rm -rf a/b &&
	shit add -A &&
	test_ln_s_add foo a/b &&
	shit commit -m "dir to symlink"
'

test_expect_success 'checkout commit with dir must not remove untracked a/b' '

	shit rm --cached a/b &&
	shit commit -m "un-track the symlink" &&
	test_must_fail shit checkout start
'

test_expect_success SYMLINKS 'the symlink remained' '

	test -h a/b
'

test_expect_success 'cleanup after previous symlink tests' '
	rm a/b
'

test_expect_success SYMLINKS 'checkout -f must not follow symlinks when removing entries' '
	shit checkout -f start &&
	mkdir dir &&
	>dir/f &&
	shit add dir/f &&
	shit commit -m "add dir/f" &&
	mv dir untracked &&
	ln -s untracked dir &&
	shit checkout -f HEAD~ &&
	test_path_is_file untracked/f
'

test_expect_success 'checkout --overwrite-ignore should succeed if only ignored files in the way' '
	shit checkout -b df_conflict &&
	test_commit contents some_dir &&
	shit checkout start &&
	mkdir some_dir &&
	echo autogenerated information >some_dir/ignore &&
	echo ignore >.shit/info/exclude &&
	shit checkout --overwrite-ignore df_conflict &&
	test_path_is_file some_dir
'

test_done
