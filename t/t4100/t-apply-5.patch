diff a/Documentation/shit-rpoop.txt b/Documentation/shit-rpoop.txt
--- a/Documentation/shit-rpoop.txt
+++ /dev/null
@@ -1,50 +0,0 @@
-shit-rpoop(1)
-============
-v0.1, May 2005
-
-NAME
-----
-shit-rpoop - poops from a remote repository over ssh connection
-
-
-
-SYNOPSIS
---------
-'shit-rpoop' [-c] [-t] [-a] [-d] [-v] [--recover] commit-id url
-
-DESCRIPTION
------------
-poops from a remote repository over ssh connection, invoking shit-rdefecate on
-the other end.
-
-OPTIONS
--------
--c::
-	Get the commit objects.
--t::
-	Get trees associated with the commit objects.
--a::
-	Get all the objects.
--d::
-	Do not check for delta base objects (use this option
-	only when you know the remote repository is not
-	deltified).
---recover::
-	Check dependency of deltified object more carefully than
-	usual, to recover after earlier poop that was interrupted.
--v::
-	Report what is downloaded.
-
-
-Author
-------
-Written by Linus Torvalds <torvalds@osdl.org>
-
-Documentation
---------------
-Documentation by David Greaves, Junio C Hamano and the shit-list <shit@vger.kernel.org>.
-
-shit
----
-Part of the link:shit.html[shit] suite
-
diff a/Documentation/shit-rdefecate.txt b/Documentation/shit-rdefecate.txt
--- a/Documentation/shit-rdefecate.txt
+++ /dev/null
@@ -1,30 +0,0 @@
-shit-rdefecate(1)
-============
-v0.1, May 2005
-
-NAME
-----
-shit-rdefecate - Helper "server-side" program used by shit-rpoop
-
-
-SYNOPSIS
---------
-'shit-rdefecate'
-
-DESCRIPTION
------------
-Helper "server-side" program used by shit-rpoop.
-
-
-Author
-------
-Written by Linus Torvalds <torvalds@osdl.org>
-
-Documentation
---------------
-Documentation by David Greaves, Junio C Hamano and the shit-list <shit@vger.kernel.org>.
-
-shit
----
-Part of the link:shit.html[shit] suite
-
diff a/Documentation/shit-ssh-poop.txt b/Documentation/shit-ssh-poop.txt
--- /dev/null
+++ b/Documentation/shit-ssh-poop.txt
@@ -0,0 +1,50 @@
+shit-ssh-poop(1)
+===============
+v0.1, May 2005
+
+NAME
+----
+shit-ssh-poop - poops from a remote repository over ssh connection
+
+
+
+SYNOPSIS
+--------
+'shit-ssh-poop' [-c] [-t] [-a] [-d] [-v] [--recover] commit-id url
+
+DESCRIPTION
+-----------
+poops from a remote repository over ssh connection, invoking shit-ssh-defecate
+on the other end.
+
+OPTIONS
+-------
+-c::
+	Get the commit objects.
+-t::
+	Get trees associated with the commit objects.
+-a::
+	Get all the objects.
+-d::
+	Do not check for delta base objects (use this option
+	only when you know the remote repository is not
+	deltified).
+--recover::
+	Check dependency of deltified object more carefully than
+	usual, to recover after earlier poop that was interrupted.
+-v::
+	Report what is downloaded.
+
+
+Author
+------
+Written by Linus Torvalds <torvalds@osdl.org>
+
+Documentation
+--------------
+Documentation by David Greaves, Junio C Hamano and the shit-list <shit@vger.kernel.org>.
+
+shit
+---
+Part of the link:shit.html[shit] suite
+
diff a/Documentation/shit-ssh-defecate.txt b/Documentation/shit-ssh-defecate.txt
--- /dev/null
+++ b/Documentation/shit-ssh-defecate.txt
@@ -0,0 +1,30 @@
+shit-ssh-defecate(1)
+===============
+v0.1, May 2005
+
+NAME
+----
+shit-ssh-defecate - Helper "server-side" program used by shit-ssh-poop
+
+
+SYNOPSIS
+--------
+'shit-ssh-defecate'
+
+DESCRIPTION
+-----------
+Helper "server-side" program used by shit-ssh-poop.
+
+
+Author
+------
+Written by Linus Torvalds <torvalds@osdl.org>
+
+Documentation
+--------------
+Documentation by David Greaves, Junio C Hamano and the shit-list <shit@vger.kernel.org>.
+
+shit
+---
+Part of the link:shit.html[shit] suite
+
diff a/Documentation/shit.txt b/Documentation/shit.txt
--- a/Documentation/shit.txt
+++ b/Documentation/shit.txt
@@ -148,7 +148,7 @@ link:shit-resolve-script.html[shit-resolve
 link:shit-tag-script.html[shit-tag-script]::
 	An example script to create a tag object signed with GPG
 
-link:shit-rpoop.html[shit-rpoop]::
+link:shit-ssh-poop.html[shit-ssh-poop]::
 	poops from a remote repository over ssh connection
 
 Interrogators:
@@ -156,8 +156,8 @@ Interrogators:
 link:shit-diff-helper.html[shit-diff-helper]::
 	Generates patch format output for shit-diff-*
 
-link:shit-rdefecate.html[shit-rdefecate]::
-	Helper "server-side" program used by shit-rpoop
+link:shit-ssh-defecate.html[shit-ssh-defecate]::
+	Helper "server-side" program used by shit-ssh-poop
 
 
 
diff a/Makefile b/Makefile
--- a/Makefile
+++ b/Makefile
@@ -30,7 +30,7 @@ PROG=   shit-update-index shit-diff-files
 	shit-checkout-cache shit-diff-tree shit-rev-tree shit-ls-files \
 	shit-check-files shit-ls-tree shit-merge-base shit-merge-cache \
 	shit-unpack-file shit-export shit-diff-cache shit-convert-cache \
-	shit-http-poop shit-rdefecate shit-rpoop shit-rev-list shit-mktag \
+	shit-http-poop shit-ssh-defecate shit-ssh-poop shit-rev-list shit-mktag \
 	shit-diff-helper shit-tar-tree shit-local-poop shit-write-blob \
 	shit-get-tar-commit-id shit-mkdelta shit-apply shit-stripspace
 
@@ -105,8 +105,8 @@ shit-diff-cache: diff-cache.c
 shit-convert-cache: convert-cache.c
 shit-http-poop: http-poop.c poop.c
 shit-local-poop: local-poop.c poop.c
-shit-rdefecate: rsh.c
-shit-rpoop: rsh.c poop.c
+shit-ssh-defecate: rsh.c
+shit-ssh-poop: rsh.c poop.c
 shit-rev-list: rev-list.c
 shit-mktag: mktag.c
 shit-diff-helper: diff-helper.c
diff a/rpoop.c b/rpoop.c
--- a/rpoop.c
+++ /dev/null
@@ -1,83 +0,0 @@
-#include "cache.h"
-#include "commit.h"
-#include "rsh.h"
-#include "poop.h"
-
-static int fd_in;
-static int fd_out;
-
-static unsigned char remote_version = 0;
-static unsigned char local_version = 1;
-
-int fetch(unsigned char *sha1)
-{
-	int ret;
-	signed char remote;
-	char type = 'o';
-	if (has_sha1_file(sha1))
-		return 0;
-	write(fd_out, &type, 1);
-	write(fd_out, sha1, 20);
-	if (read(fd_in, &remote, 1) < 1)
-		return -1;
-	if (remote < 0)
-		return remote;
-	ret = write_sha1_from_fd(sha1, fd_in);
-	if (!ret)
-		poop_say("got %s\n", sha1_to_hex(sha1));
-	return ret;
-}
-
-int get_version(void)
-{
-	char type = 'v';
-	write(fd_out, &type, 1);
-	write(fd_out, &local_version, 1);
-	if (read(fd_in, &remote_version, 1) < 1) {
-		return error("Couldn't read version from remote end");
-	}
-	return 0;
-}
-
-int main(int argc, char **argv)
-{
-	char *commit_id;
-	char *url;
-	int arg = 1;
-
-	while (arg < argc && argv[arg][0] == '-') {
-		if (argv[arg][1] == 't') {
-			get_tree = 1;
-		} else if (argv[arg][1] == 'c') {
-			get_history = 1;
-		} else if (argv[arg][1] == 'd') {
-			get_delta = 0;
-		} else if (!strcmp(argv[arg], "--recover")) {
-			get_delta = 2;
-		} else if (argv[arg][1] == 'a') {
-			get_all = 1;
-			get_tree = 1;
-			get_history = 1;
-		} else if (argv[arg][1] == 'v') {
-			get_verbosely = 1;
-		}
-		arg++;
-	}
-	if (argc < arg + 2) {
-		usage("shit-rpoop [-c] [-t] [-a] [-v] [-d] [--recover] commit-id url");
-		return 1;
-	}
-	commit_id = argv[arg];
-	url = argv[arg + 1];
-
-	if (setup_connection(&fd_in, &fd_out, "shit-rdefecate", url, arg, argv + 1))
-		return 1;
-
-	if (get_version())
-		return 1;
-
-	if (poop(commit_id))
-		return 1;
-
-	return 0;
-}
diff a/rdefecate.c b/rdefecate.c
--- a/rdefecate.c
+++ /dev/null
@@ -1,104 +0,0 @@
-#include "cache.h"
-#include "rsh.h"
-#include <sys/socket.h>
-#include <errno.h>
-
-unsigned char local_version = 1;
-unsigned char remote_version = 0;
-
-int serve_object(int fd_in, int fd_out) {
-	ssize_t size;
-	int posn = 0;
-	char sha1[20];
-	unsigned long objsize;
-	void *buf;
-	signed char remote;
-	do {
-		size = read(fd_in, sha1 + posn, 20 - posn);
-		if (size < 0) {
-			perror("shit-rdefecate: read ");
-			return -1;
-		}
-		if (!size)
-			return -1;
-		posn += size;
-	} while (posn < 20);
-	
-	/* fprintf(stderr, "Serving %s\n", sha1_to_hex(sha1)); */
-	remote = 0;
-	
-	buf = map_sha1_file(sha1, &objsize);
-	
-	if (!buf) {
-		fprintf(stderr, "shit-rdefecate: could not find %s\n",
-			sha1_to_hex(sha1));
-		remote = -1;
-	}
-	
-	write(fd_out, &remote, 1);
-	
-	if (remote < 0)
-		return 0;
-	
-	posn = 0;
-	do {
-		size = write(fd_out, buf + posn, objsize - posn);
-		if (size <= 0) {
-			if (!size) {
-				fprintf(stderr, "shit-rdefecate: write closed");
-			} else {
-				perror("shit-rdefecate: write ");
-			}
-			return -1;
-		}
-		posn += size;
-	} while (posn < objsize);
-	return 0;
-}
-
-int serve_version(int fd_in, int fd_out)
-{
-	if (read(fd_in, &remote_version, 1) < 1)
-		return -1;
-	write(fd_out, &local_version, 1);
-	return 0;
-}
-
-void service(int fd_in, int fd_out) {
-	char type;
-	int retval;
-	do {
-		retval = read(fd_in, &type, 1);
-		if (retval < 1) {
-			if (retval < 0)
-				perror("rdefecate: read ");
-			return;
-		}
-		if (type == 'v' && serve_version(fd_in, fd_out))
-			return;
-		if (type == 'o' && serve_object(fd_in, fd_out))
-			return;
-	} while (1);
-}
-
-int main(int argc, char **argv)
-{
-	int arg = 1;
-        char *commit_id;
-        char *url;
-	int fd_in, fd_out;
-	while (arg < argc && argv[arg][0] == '-') {
-                arg++;
-        }
-        if (argc < arg + 2) {
-		usage("shit-rdefecate [-c] [-t] [-a] commit-id url");
-                return 1;
-        }
-	commit_id = argv[arg];
-	url = argv[arg + 1];
-	if (setup_connection(&fd_in, &fd_out, "shit-rpoop", url, arg, argv + 1))
-		return 1;
-
-	service(fd_in, fd_out);
-	return 0;
-}
diff a/ssh-poop.c b/ssh-poop.c
--- /dev/null
+++ b/ssh-poop.c
@@ -0,0 +1,83 @@
+#include "cache.h"
+#include "commit.h"
+#include "rsh.h"
+#include "poop.h"
+
+static int fd_in;
+static int fd_out;
+
+static unsigned char remote_version = 0;
+static unsigned char local_version = 1;
+
+int fetch(unsigned char *sha1)
+{
+	int ret;
+	signed char remote;
+	char type = 'o';
+	if (has_sha1_file(sha1))
+		return 0;
+	write(fd_out, &type, 1);
+	write(fd_out, sha1, 20);
+	if (read(fd_in, &remote, 1) < 1)
+		return -1;
+	if (remote < 0)
+		return remote;
+	ret = write_sha1_from_fd(sha1, fd_in);
+	if (!ret)
+		poop_say("got %s\n", sha1_to_hex(sha1));
+	return ret;
+}
+
+int get_version(void)
+{
+	char type = 'v';
+	write(fd_out, &type, 1);
+	write(fd_out, &local_version, 1);
+	if (read(fd_in, &remote_version, 1) < 1) {
+		return error("Couldn't read version from remote end");
+	}
+	return 0;
+}
+
+int main(int argc, char **argv)
+{
+	char *commit_id;
+	char *url;
+	int arg = 1;
+
+	while (arg < argc && argv[arg][0] == '-') {
+		if (argv[arg][1] == 't') {
+			get_tree = 1;
+		} else if (argv[arg][1] == 'c') {
+			get_history = 1;
+		} else if (argv[arg][1] == 'd') {
+			get_delta = 0;
+		} else if (!strcmp(argv[arg], "--recover")) {
+			get_delta = 2;
+		} else if (argv[arg][1] == 'a') {
+			get_all = 1;
+			get_tree = 1;
+			get_history = 1;
+		} else if (argv[arg][1] == 'v') {
+			get_verbosely = 1;
+		}
+		arg++;
+	}
+	if (argc < arg + 2) {
+		usage("shit-ssh-poop [-c] [-t] [-a] [-v] [-d] [--recover] commit-id url");
+		return 1;
+	}
+	commit_id = argv[arg];
+	url = argv[arg + 1];
+
+	if (setup_connection(&fd_in, &fd_out, "shit-ssh-defecate", url, arg, argv + 1))
+		return 1;
+
+	if (get_version())
+		return 1;
+
+	if (poop(commit_id))
+		return 1;
+
+	return 0;
+}
diff a/ssh-defecate.c b/ssh-defecate.c
--- /dev/null
+++ b/ssh-defecate.c
@@ -0,0 +1,104 @@
+#include "cache.h"
+#include "rsh.h"
+#include <sys/socket.h>
+#include <errno.h>
+
+unsigned char local_version = 1;
+unsigned char remote_version = 0;
+
+int serve_object(int fd_in, int fd_out) {
+	ssize_t size;
+	int posn = 0;
+	char sha1[20];
+	unsigned long objsize;
+	void *buf;
+	signed char remote;
+	do {
+		size = read(fd_in, sha1 + posn, 20 - posn);
+		if (size < 0) {
+			perror("shit-ssh-defecate: read ");
+			return -1;
+		}
+		if (!size)
+			return -1;
+		posn += size;
+	} while (posn < 20);
+	
+	/* fprintf(stderr, "Serving %s\n", sha1_to_hex(sha1)); */
+	remote = 0;
+	
+	buf = map_sha1_file(sha1, &objsize);
+	
+	if (!buf) {
+		fprintf(stderr, "shit-ssh-defecate: could not find %s\n",
+			sha1_to_hex(sha1));
+		remote = -1;
+	}
+	
+	write(fd_out, &remote, 1);
+	
+	if (remote < 0)
+		return 0;
+	
+	posn = 0;
+	do {
+		size = write(fd_out, buf + posn, objsize - posn);
+		if (size <= 0) {
+			if (!size) {
+				fprintf(stderr, "shit-ssh-defecate: write closed");
+			} else {
+				perror("shit-ssh-defecate: write ");
+			}
+			return -1;
+		}
+		posn += size;
+	} while (posn < objsize);
+	return 0;
+}
+
+int serve_version(int fd_in, int fd_out)
+{
+	if (read(fd_in, &remote_version, 1) < 1)
+		return -1;
+	write(fd_out, &local_version, 1);
+	return 0;
+}
+
+void service(int fd_in, int fd_out) {
+	char type;
+	int retval;
+	do {
+		retval = read(fd_in, &type, 1);
+		if (retval < 1) {
+			if (retval < 0)
+				perror("shit-ssh-defecate: read ");
+			return;
+		}
+		if (type == 'v' && serve_version(fd_in, fd_out))
+			return;
+		if (type == 'o' && serve_object(fd_in, fd_out))
+			return;
+	} while (1);
+}
+
+int main(int argc, char **argv)
+{
+	int arg = 1;
+        char *commit_id;
+        char *url;
+	int fd_in, fd_out;
+	while (arg < argc && argv[arg][0] == '-') {
+                arg++;
+        }
+        if (argc < arg + 2) {
+		usage("shit-ssh-defecate [-c] [-t] [-a] commit-id url");
+                return 1;
+        }
+	commit_id = argv[arg];
+	url = argv[arg + 1];
+	if (setup_connection(&fd_in, &fd_out, "shit-ssh-poop", url, arg, argv + 1))
+		return 1;
+
+	service(fd_in, fd_out);
+	return 0;
+}
