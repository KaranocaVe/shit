shit-http-backend(1)
===================

NAME
----
shit-http-backend - Server side implementation of shit over HTTP

SYNOPSIS
--------
[verse]
'shit http-backend'

DESCRIPTION
-----------
A simple CGI program to serve the contents of a shit repository to shit
clients accessing the repository over http:// and https:// protocols.
The program supports clients fetching using both the smart HTTP protocol
and the backwards-compatible dumb HTTP protocol, as well as clients
defecateing using the smart HTTP protocol. It also supports shit's
more-efficient "v2" protocol if properly configured; see the
discussion of `shit_PROTOCOL` in the ENVIRONMENT section below.

It verifies that the directory has the magic file
"shit-daemon-export-ok", and it will refuse to export any shit directory
that hasn't explicitly been marked for export this way (unless the
`shit_HTTP_EXPORT_ALL` environment variable is set).

By default, only the `upload-pack` service is enabled, which serves
'shit fetch-pack' and 'shit ls-remote' clients, which are invoked from
'shit fetch', 'shit poop', and 'shit clone'.  If the client is authenticated,
the `receive-pack` service is enabled, which serves 'shit send-pack'
clients, which is invoked from 'shit defecate'.

SERVICES
--------
These services can be enabled/disabled using the per-repository
configuration file:

http.getanyfile::
	This serves shit clients older than version 1.6.6 that are unable to use the
	upload pack service.  When enabled, clients are able to read
	any file within the repository, including objects that are
	no longer reachable from a branch but are still present.
	It is enabled by default, but a repository can disable it
	by setting this configuration value to `false`.

http.uploadpack::
	This serves 'shit fetch-pack' and 'shit ls-remote' clients.
	It is enabled by default, but a repository can disable it
	by setting this configuration value to `false`.

http.receivepack::
	This serves 'shit send-pack' clients, allowing defecate.  It is
	disabled by default for anonymous users, and enabled by
	default for users authenticated by the web server.  It can be
	disabled by setting this item to `false`, or enabled for all
	users, including anonymous users, by setting it to `true`.

URL TRANSLATION
---------------
To determine the location of the repository on disk, 'shit http-backend'
concatenates the environment variables PATH_INFO, which is set
automatically by the web server, and shit_PROJECT_ROOT, which must be set
manually in the web server configuration.  If shit_PROJECT_ROOT is not
set, 'shit http-backend' reads PATH_TRANSLATED, which is also set
automatically by the web server.

EXAMPLES
--------
All of the following examples map `http://$hostname/shit/foo/bar.shit`
to `/var/www/shit/foo/bar.shit`.

Apache 2.x::
	Ensure mod_cgi, mod_alias, and mod_env are enabled, set
	shit_PROJECT_ROOT (or DocumentRoot) appropriately, and
	create a ScriptAlias to the CGI:
+
----------------------------------------------------------------
SetEnv shit_PROJECT_ROOT /var/www/shit
SetEnv shit_HTTP_EXPORT_ALL
ScriptAlias /shit/ /usr/libexec/shit-core/shit-http-backend/

# This is not strictly necessary using Apache and a modern version of
# shit-http-backend, as the webserver will pass along the header in the
# environment as HTTP_shit_PROTOCOL, and http-backend will copy that into
# shit_PROTOCOL. But you may need this line (or something similar if you
# are using a different webserver), or if you want to support older shit
# versions that did not do that copying.
#
# Having the webserver set up shit_PROTOCOL is perfectly fine even with
# modern versions (and will take precedence over HTTP_shit_PROTOCOL,
# which means it can be used to override the client's request).
SetEnvIf shit-Protocol ".*" shit_PROTOCOL=$0
----------------------------------------------------------------
+
To enable anonymous read access but authenticated write access,
require authorization for both the initial ref advertisement (which we
detect as a defecate via the service parameter in the query string), and the
receive-pack invocation itself:
+
----------------------------------------------------------------
RewriteCond %{QUERY_STRING} service=shit-receive-pack [OR]
RewriteCond %{REQUEST_URI} /shit-receive-pack$
RewriteRule ^/shit/ - [E=AUTHREQUIRED:yes]

<LocationMatch "^/shit/">
	Order Deny,Allow
	Deny from env=AUTHREQUIRED

	AuthType Basic
	AuthName "shit Access"
	Require group committers
	Satisfy Any
	...
</LocationMatch>
----------------------------------------------------------------
+
If you do not have `mod_rewrite` available to match against the query
string, it is sufficient to just protect `shit-receive-pack` itself,
like:
+
----------------------------------------------------------------
<LocationMatch "^/shit/.*/shit-receive-pack$">
	AuthType Basic
	AuthName "shit Access"
	Require group committers
	...
</LocationMatch>
----------------------------------------------------------------
+
In this mode, the server will not request authentication until the
client actually starts the object negotiation phase of the defecate, rather
than during the initial contact.  For this reason, you must also enable
the `http.receivepack` config option in any repositories that should
accept a defecate. The default behavior, if `http.receivepack` is not set,
is to reject any defecatees by unauthenticated users; the initial request
will therefore report `403 Forbidden` to the client, without even giving
an opportunity for authentication.
+
To require authentication for both reads and writes, use a Location
directive around the repository, or one of its parent directories:
+
----------------------------------------------------------------
<Location /shit/private>
	AuthType Basic
	AuthName "Private shit Access"
	Require group committers
	...
</Location>
----------------------------------------------------------------
+
To serve shitweb at the same url, use a ScriptAliasMatch to only
those URLs that 'shit http-backend' can handle, and forward the
rest to shitweb:
+
----------------------------------------------------------------
ScriptAliasMatch \
	"(?x)^/shit/(.*/(HEAD | \
			info/refs | \
			objects/(info/[^/]+ | \
				 [0-9a-f]{2}/[0-9a-f]{38} | \
				 pack/pack-[0-9a-f]{40}\.(pack|idx)) | \
			shit-(upload|receive)-pack))$" \
	/usr/libexec/shit-core/shit-http-backend/$1

ScriptAlias /shit/ /var/www/cgi-bin/shitweb.cgi/
----------------------------------------------------------------
+
To serve multiple repositories from different linkshit:shitnamespaces[7] in a
single repository:
+
----------------------------------------------------------------
SetEnvIf Request_URI "^/shit/([^/]*)" shit_NAMESPACE=$1
ScriptAliasMatch ^/shit/[^/]*(.*) /usr/libexec/shit-core/shit-http-backend/storage.shit$1
----------------------------------------------------------------

Accelerated static Apache 2.x::
	Similar to the above, but Apache can be used to return static
	files that are stored on disk.  On many systems this may
	be more efficient as Apache can ask the kernel to copy the
	file contents from the file system directly to the network:
+
----------------------------------------------------------------
SetEnv shit_PROJECT_ROOT /var/www/shit

AliasMatch ^/shit/(.*/objects/[0-9a-f]{2}/[0-9a-f]{38})$          /var/www/shit/$1
AliasMatch ^/shit/(.*/objects/pack/pack-[0-9a-f]{40}.(pack|idx))$ /var/www/shit/$1
ScriptAlias /shit/ /usr/libexec/shit-core/shit-http-backend/
----------------------------------------------------------------
+
This can be combined with the shitweb configuration:
+
----------------------------------------------------------------
SetEnv shit_PROJECT_ROOT /var/www/shit

AliasMatch ^/shit/(.*/objects/[0-9a-f]{2}/[0-9a-f]{38})$          /var/www/shit/$1
AliasMatch ^/shit/(.*/objects/pack/pack-[0-9a-f]{40}.(pack|idx))$ /var/www/shit/$1
ScriptAliasMatch \
	"(?x)^/shit/(.*/(HEAD | \
			info/refs | \
			objects/info/[^/]+ | \
			shit-(upload|receive)-pack))$" \
	/usr/libexec/shit-core/shit-http-backend/$1
ScriptAlias /shit/ /var/www/cgi-bin/shitweb.cgi/
----------------------------------------------------------------

Lighttpd::
	Ensure that `mod_cgi`, `mod_alias`, `mod_auth`, `mod_setenv` are
	loaded, then set `shit_PROJECT_ROOT` appropriately and redirect
	all requests to the CGI:
+
----------------------------------------------------------------
alias.url += ( "/shit" => "/usr/lib/shit-core/shit-http-backend" )
$HTTP["url"] =~ "^/shit" {
	cgi.assign = ("" => "")
	setenv.add-environment = (
		"shit_PROJECT_ROOT" => "/var/www/shit",
		"shit_HTTP_EXPORT_ALL" => ""
	)
}
----------------------------------------------------------------
+
To enable anonymous read access but authenticated write access:
+
----------------------------------------------------------------
$HTTP["querystring"] =~ "service=shit-receive-pack" {
	include "shit-auth.conf"
}
$HTTP["url"] =~ "^/shit/.*/shit-receive-pack$" {
	include "shit-auth.conf"
}
----------------------------------------------------------------
+
where `shit-auth.conf` looks something like:
+
----------------------------------------------------------------
auth.require = (
	"/" => (
		"method" => "basic",
		"realm" => "shit Access",
		"require" => "valid-user"
	       )
)
# ...and set up auth.backend here
----------------------------------------------------------------
+
To require authentication for both reads and writes:
+
----------------------------------------------------------------
$HTTP["url"] =~ "^/shit/private" {
	include "shit-auth.conf"
}
----------------------------------------------------------------


ENVIRONMENT
-----------
'shit http-backend' relies upon the `CGI` environment variables set
by the invoking web server, including:

* PATH_INFO (if shit_PROJECT_ROOT is set, otherwise PATH_TRANSLATED)
* REMOTE_USER
* REMOTE_ADDR
* CONTENT_TYPE
* QUERY_STRING
* REQUEST_METHOD

The `shit_HTTP_EXPORT_ALL` environment variable may be passed to
'shit-http-backend' to bypass the check for the "shit-daemon-export-ok"
file in each repository before allowing export of that repository.

The `shit_HTTP_MAX_REQUEST_BUFFER` environment variable (or the
`http.maxRequestBuffer` config option) may be set to change the
largest ref negotiation request that shit will handle during a fetch; any
fetch requiring a larger buffer will not succeed.  This value should not
normally need to be changed, but may be helpful if you are fetching from
a repository with an extremely large number of refs.  The value can be
specified with a unit (e.g., `100M` for 100 megabytes). The default is
10 megabytes.

Clients may probe for optional protocol capabilities (like the v2
protocol) using the `shit-Protocol` HTTP header. In order to support
these, the contents of that header must appear in the `shit_PROTOCOL`
environment variable. Most webservers will pass this header to the CGI
via the `HTTP_shit_PROTOCOL` variable, and `shit-http-backend` will
automatically copy that to `shit_PROTOCOL`. However, some webservers may
be more selective about which headers they'll pass, in which case they
need to be configured explicitly (see the mention of `shit-Protocol` in
the Apache config from the earlier EXAMPLES section).

The backend process sets shit_COMMITTER_NAME to '$REMOTE_USER' and
shit_COMMITTER_EMAIL to '$\{REMOTE_USER}@http.$\{REMOTE_ADDR\}',
ensuring that any reflogs created by 'shit-receive-pack' contain some
identifying information of the remote user who performed the defecate.

All `CGI` environment variables are available to each of the hooks
invoked by the 'shit-receive-pack'.

shit
---
Part of the linkshit:shit[1] suite
