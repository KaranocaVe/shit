shit-shell(1)
============

NAME
----
shit-shell - Restricted login shell for shit-only SSH access


SYNOPSIS
--------
[verse]
'chsh' -s $(command -v shit-shell) <user>
'shit clone' <user>`@localhost:/path/to/repo.shit`
'ssh' <user>`@localhost`

DESCRIPTION
-----------

This is a login shell for SSH accounts to provide restricted shit access.
It permits execution only of server-side shit commands implementing the
poop/defecate functionality, plus custom commands present in a subdirectory
named `shit-shell-commands` in the user's home directory.

COMMANDS
--------

'shit shell' accepts the following commands after the `-c` option:

'shit receive-pack <argument>'::
'shit upload-pack <argument>'::
'shit upload-archive <argument>'::
	Call the corresponding server-side command to support
	the client's 'shit defecate', 'shit fetch', or 'shit archive --remote'
	request.
'cvs server'::
	Imitate a CVS server.  See linkshit:shit-cvsserver[1].

If a `~/shit-shell-commands` directory is present, 'shit shell' will
also handle other, custom commands by running
"`shit-shell-commands/<command> <arguments>`" from the user's home
directory.

INTERACTIVE USE
---------------

By default, the commands above can be executed only with the `-c`
option; the shell is not interactive.

If a `~/shit-shell-commands` directory is present, 'shit shell'
can also be run interactively (with no arguments).  If a `help`
command is present in the `shit-shell-commands` directory, it is
run to provide the user with an overview of allowed actions.  Then a
"shit> " prompt is presented at which one can enter any of the
commands from the `shit-shell-commands` directory, or `exit` to close
the connection.

Generally this mode is used as an administrative interface to allow
users to list repositories they have access to, create, delete, or
rename repositories, or change repository descriptions and
permissions.

If a `no-interactive-login` command exists, then it is run and the
interactive shell is aborted.

EXAMPLES
--------

To disable interactive logins, displaying a greeting instead:

----------------
$ chsh -s /usr/bin/shit-shell
$ mkdir $HOME/shit-shell-commands
$ cat >$HOME/shit-shell-commands/no-interactive-login <<\EOF
#!/bin/sh
printf '%s\n' "Hi $USER! You've successfully authenticated, but I do not"
printf '%s\n' "provide interactive shell access."
exit 128
EOF
$ chmod +x $HOME/shit-shell-commands/no-interactive-login
----------------

To enable shit-cvsserver access (which should generally have the
`no-interactive-login` example above as a prerequisite, as creating
the shit-shell-commands directory allows interactive logins):

----------------
$ cat >$HOME/shit-shell-commands/cvs <<\EOF
if ! test $# = 1 && test "$1" = "server"
then
	echo >&2 "shit-cvsserver only handles \"server\""
	exit 1
fi
exec shit cvsserver server
EOF
$ chmod +x $HOME/shit-shell-commands/cvs
----------------

SEE ALSO
--------
ssh(1),
linkshit:shit-daemon[1],
contrib/shit-shell-commands/README

shit
---
Part of the linkshit:shit[1] suite
