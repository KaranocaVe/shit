shit web Interface (shitweb) Installation
=======================================

First you have to generate shitweb.cgi from shitweb.perl using
"make shitweb", then "make install-shitweb" appropriate files
(shitweb.cgi, shitweb.js, shitweb.css, shit-logo.png and shit-favicon.png)
to their destination. For example if shit was (or is) installed with
/usr prefix and shitwebdir is /var/www/cgi-bin, you can do

	$ make prefix=/usr shitweb                            ;# as yourself
	# make shitwebdir=/var/www/cgi-bin install-shitweb     ;# as root

Alternatively you can use autoconf generated ./configure script to
set up path to shit binaries (via config.mak.autogen), so you can write
instead

	$ make configure                     ;# as yourself
	$ ./configure --prefix=/usr          ;# as yourself
	$ make shitweb                        ;# as yourself
	# make shitwebdir=/var/www/cgi-bin \
	       install-shitweb                ;# as root

The above example assumes that your web server is configured to run
[executable] files in /var/www/cgi-bin/ as server scripts (as CGI
scripts).


Requirements
------------

 - Core shit tools
 - Perl 5.8.1
 - Perl modules: CGI, Encode, Fcntl, File::Find, File::Basename.
 - web server

The following optional Perl modules are required for extra features
 - CGI::Fast and FCGI - for running shitweb as FastCGI script
 - HTML::TagCloud - for fancy tag cloud in project list view
 - HTTP::Date or Time::ParseDate - to support If-Modified-Since for feeds


Build time configuration
------------------------

See also "How to configure shitweb for your local system" section below.

- There are many configuration variables which affect building of
  shitweb.cgi; see "default configuration for shitweb" section in main
  (top dir) Makefile, and instructions for building shitweb target.

  One of the most important is where to find the shit wrapper binary. shitweb
  tries to find the shit wrapper at $(bindir)/shit, so you have to set $bindir
  when building shitweb.cgi, or $prefix from which $bindir is derived. If
  you build and install shitweb together with the rest of the shit suite,
  there should be no problems. Otherwise, if shit was for example
  installed from a binary package, you have to set $prefix (or $bindir)
  accordingly.

- Another important issue is where are shit repositories you want to make
  available to shitweb. By default shitweb searches for repositories under
  /pub/shit; if you want to have projects somewhere else, like /home/shit,
  use shitWEB_PROJECTROOT build configuration variable.

  By default all shit repositories under projectroot are visible and
  available to shitweb. The list of projects is generated by default by
  scanning the projectroot directory for shit repositories. This can be
  changed (configured) as described in "shitweb repositories" section
  below.

  Note that shitweb deals directly with the object database, and does not
  need a working directory; the name of the project is the name of its
  repository object database, usually projectname.shit for bare
  repositories. If you want to provide shitweb access to non-bare (live)
  repositories, you can make projectname.shit a symbolic link under
  projectroot linking to projectname/.shit (but it is just
  a suggestion).

- You can control where shitweb tries to find its main CSS style file,
  its JavaScript file, its favicon and logo with the shitWEB_CSS, shitWEB_JS
  shitWEB_FAVICON and shitWEB_LOGO build configuration variables. By default
  shitweb tries to find them in the same directory as shitweb.cgi script.

- You can optionally generate minified versions of shitweb.js and shitweb.css
  by defining the JSMIN and CSSMIN build configuration variables. By default
  the non-minified versions will be used. NOTE: if you enable this option,
  substitute shitweb.min.js and shitweb.min.css for all uses of shitweb.js and
  shitweb.css in the help files.


How to configure shitweb for your local system
---------------------------------------------

You can specify the following configuration variables when building shit:

 * shit_BINDIR
   Points where to find the shit executable.  You should set it up to
   the place where the shit binary was installed (usually /usr/bin) if you
   don't install shit from sources together with shitweb.  [Default: $(bindir)]
 * shitWEB_SITENAME
   Shown in the title of all generated pages, defaults to the server name
   (SERVER_NAME CGI environment variable) if not set. [No default]
 * shitWEB_PROJECTROOT
   The root directory for all projects shown by shitweb. Must be set
   correctly for shitweb to find repositories to display.  See also
   "shitweb repositories" in the INSTALL file for shitweb.  [Default: /pub/shit]
 * shitWEB_PROJECT_MAXDEPTH
   The filesystem traversing limit for getting the project list; the number
   is taken as depth relative to the projectroot.  It is used when
   shitWEB_LIST is a directory (or is not set; then project root is used).
   This is meant to speed up project listing on large work trees by limiting
   search depth.  [Default: 2007]
 * shitWEB_LIST
   Points to a directory to scan for projects (defaults to project root
   if not set / if empty) or to a file with explicit listing of projects
   (together with projects' ownership). See "Generating projects list
   using shitweb" in INSTALL file for shitweb to find out how to generate
   such file from scan of a directory. [No default, which means use root
   directory for projects]
 * shitWEB_EXPORT_OK
   Show repository only if this file exists (in repository).  Only
   effective if this variable evaluates to true.  [No default / Not set]
 * shitWEB_STRICT_EXPORT
   Only allow viewing of repositories also shown on the overview page.
   This for example makes shitWEB_EXPORT_OK to decide if repository is
   available and not only if it is shown.  If shitWEB_LIST points to
   file with list of project, only those repositories listed would be
   available for shitweb.  [No default]
 * shitWEB_HOMETEXT
   Points to an .html file which is included on the shitweb project
   overview page ('projects_list' view), if it exists.  Relative to
   shitweb.cgi script.  [Default: indextext.html]
 * shitWEB_SITE_HTML_HEAD_STRING
   html snippet to include in the <head> section of each page. [No default]
 * shitWEB_SITE_HEADER
   Filename of html text to include at top of each page.  Relative to
   shitweb.cgi script.  [No default]
 * shitWEB_SITE_FOOTER
   Filename of html text to include at bottom of each page.  Relative to
   shitweb.cgi script.  [No default]
 * shitWEB_HOME_LINK_STR
   String of the home link on top of all pages, leading to $home_link
   (usually main shitweb page, which means projects list).  Used as first
   part of shitweb view "breadcrumb trail": <home> / <project> / <view>.
   [Default: projects]
 * shitWEB_SITENAME
   Name of your site or organization to appear in page titles.  Set it
   to something descriptive for clearer bookmarks etc.  If not set
   (if empty) shitweb uses "$SERVER_NAME shit", or "Untitled shit" if
   SERVER_NAME CGI environment variable is not set (e.g. if running
   shitweb as standalone script).  [No default]
 * shitWEB_BASE_URL
   shit base URLs used for URL to where fetch project from, i.e. full
   URL is "$shit_base_url/$project".  Shown on projects summary page.
   Repository URL for project can be also configured per repository; this
   takes precedence over URLs composed from base URL and a project name.
   Note that you can setup multiple base URLs (for example one for
   shit:// protocol access, another for http:// access) from the shitweb
   config file.  [No default]
 * shitWEB_CSS
   Points to the location where you put shitweb.css on your web server
   (or to be more generic, the URI of shitweb stylesheet).  Relative to the
   base URI of shitweb.  Note that you can setup multiple stylesheets from
   the shitweb config file.  [Default: static/shitweb.css (or
   static/shitweb.min.css if the CSSMIN variable is defined / CSS minifier
   is used)]
 * shitWEB_JS
   Points to the location where you put shitweb.js on your web server
   (or to be more generic URI of JavaScript code used by shitweb).
   Relative to base URI of shitweb.  [Default: static/shitweb.js (or
   static/shitweb.min.js if JSMIN build variable is defined / JavaScript
   minifier is used)]
 * CSSMIN, JSMIN
   Invocation of a CSS minifier or a JavaScript minifier, respectively,
   working as a filter (source on standard input, minified result on
   standard output).  If set, it is used to generate a minified version of
   'static/shitweb.css' or 'static/shitweb.js', respectively.  *Note* that
   minified files would have *.min.css and *.min.js extension, which is
   important if you also set shitWEB_CSS and/or shitWEB_JS.  [No default]
 * shitWEB_LOGO
   Points to the location where you put shit-logo.png on your web server
   (or to be more generic URI of logo, 72x27 size, displayed in top right
   corner of each shitweb page, and used as logo for Atom feed).  Relative
   to base URI of shitweb.  [Default: static/shit-logo.png]
 * shitWEB_FAVICON
   Points to the location where you put shit-favicon.png on your web server
   (or to be more generic URI of favicon, assumed to be image/png type;
   web browsers that support favicons (website icons) may display them
   in the browser's URL bar and next to site name in bookmarks).  Relative
   to base URI of shitweb.  [Default: static/shit-favicon.png]
 * shitWEB_CONFIG
   This Perl file will be loaded using 'do' and can be used to override any
   of the options above as well as some other options -- see the "Runtime
   shitweb configuration" section below, and top of 'shitweb.cgi' for their
   full list and description.  If the environment variable shitWEB_CONFIG
   is set when shitweb.cgi is executed, then the file specified in the
   environment variable will be loaded instead of the file specified
   when shitweb.cgi was created.  [Default: shitweb_config.perl]
 * shitWEB_CONFIG_SYSTEM
   This Perl file will be loaded using 'do' as a fallback if shitWEB_CONFIG
   does not exist.  If the environment variable shitWEB_CONFIG_SYSTEM is set
   when shitweb.cgi is executed, then the file specified in the environment
   variable will be loaded instead of the file specified when shitweb.cgi was
   created.  [Default: /etc/shitweb.conf]
 * HIGHLIGHT_BIN
   Path to the highlight executable to use (must be the one from
   http://andre-simon.de/zip/download.php due to assumptions about parameters and output).
   Useful if highlight is not installed on your webserver's PATH.
   [Default: highlight]

Build example
~~~~~~~~~~~~~

- To install shitweb to /var/www/cgi-bin/shitweb/, when shit wrapper
  is installed at /usr/local/bin/shit, the repositories (projects)
  we want to display are under /home/local/scm, and you do not use
  minifiers, you can do

	make shitWEB_PROJECTROOT="/home/local/scm" \
	     shitWEB_JS="shitweb/static/shitweb.js" \
	     shitWEB_CSS="shitweb/static/shitweb.css" \
	     shitWEB_LOGO="shitweb/static/shit-logo.png" \
	     shitWEB_FAVICON="shitweb/static/shit-favicon.png" \
	     bindir=/usr/local/bin \
	     shitweb

	make shitwebdir=/var/www/cgi-bin/shitweb install-shitweb


shitweb config file
------------------

See also "Runtime shitweb configuration" section in README file
for shitweb (in shitweb/README), and shitweb.conf(5) manpage.

- You can configure shitweb further using the per-instance shitweb configuration file;
  by default this is a file named shitweb_config.perl in the same place as
  shitweb.cgi script. You can control the default place for the config file
  using the shitWEB_CONFIG build configuration variable, and you can set it
  using the shitWEB_CONFIG environment variable. If this file does not
  exist, shitweb looks for a system-wide configuration file, normally
  /etc/shitweb.conf. You can change the default using the
  shitWEB_CONFIG_SYSTEM build configuration variable, and override it
  through the shitWEB_CONFIG_SYSTEM environment variable.

  Note that the shitWEB_CONFIG_SYSTEM system-wide configuration file is
  only used for instances that lack per-instance configuration file.
  You can use shitWEB_CONFIG_COMMON common system-wide configuration
  file (normally /etc/shitweb-common.conf) to keep common default
  settings that apply to all instances.  Settings from per-instance or
  system-wide configuration file override those from common system-wide
  configuration file.

- The shitweb config file is a fragment of perl code. You can set variables
  using "our $variable = value"; text from "#" character until the end
  of a line is ignored. See perlsyn(1) for details.

  See the top of shitweb.perl file for examples of customizable options.

Config file example
~~~~~~~~~~~~~~~~~~~

To enable blame, pickaxe search, and snapshot support, while allowing
individual projects to turn them off, put the following in your
shitWEB_CONFIG file:

	$feature{'blame'}{'default'} = [1];
	$feature{'blame'}{'override'} = 1;

	$feature{'pickaxe'}{'default'} = [1];
	$feature{'pickaxe'}{'override'} = 1;

	$feature{'snapshot'}{'default'} = ['zip', 'tgz'];
	$feature{'snapshot'}{'override'} = 1;

If you allow overriding for the snapshot feature, you can specify which
snapshot formats are globally disabled. You can also add any command line
options you want (such as setting the compression level). For instance,
you can disable Zip compressed snapshots and set GZip to run at level 6 by
adding the following lines to your $shitWEB_CONFIG:

	$known_snapshot_formats{'zip'}{'disabled'} = 1;
	$known_snapshot_formats{'tgz'}{'compressor'} = ['gzip','-6'];


shitweb repositories
-------------------

By default shitweb shows all shit repositories under single common repository
root on a local filesystem; see description of shitWEB_PROJECTROOT build-time
configuration variable above (and also of shitWEB_LIST).

More advanced usage, like limiting access or visibility of repositories and
managing multiple roots are described on shitweb manpage.


Example web server configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

See also "Webserver configuration" and "Advanced web server setup" sections
in shitweb(1) manpage.


- Apache2, shitweb installed as CGI script,
  under /var/www/cgi-bin/

	ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"

	<Directory "/var/www/cgi-bin">
	    Options Indexes FollowSymlinks ExecCGI
	    AllowOverride None
	    Order allow,deny
	    Allow from all
	</Directory>

- Apache2, shitweb installed as mod_perl legacy script,
  under /var/www/perl/

	Alias /perl "/var/www/perl"

	<Directory "/var/www/perl">
	    SetHandler perl-script
	    PerlResponseHandler ModPerl::Registry
	    PerlOptions +ParseHeaders
	    Options Indexes FollowSymlinks +ExecCGI
	    AllowOverride None
	    Order allow,deny
	    Allow from all
	</Directory>
